"0","```r
tic <- Sys.time()
komps <- c(\"komp_techniczne\", \"komp_matematyczne\", \"komp_kulturalne\", \"komp_komputerowe\", 
                             \"komp_kognitywne\", \"komp_kierownicze\", \"komp_interpersonalne\", 
                             \"komp_indywidualne\", \"komp_fizyczne\", \"komp_dyspozycyjne\", \"komp_biurowe\")
res_alasso_kod2 <- foreach(i = 1:500, .export = c(\"wynik\"), .verbose = TRUE) %dopar% {
  
  set.seed(i)
  
  totals_boot <- totals %>% filter(b == i)
  
  final_data_kod2 <- final_data %>%  group_by(rok) %>%  
      sample_frac(1, replace = T) %>% ungroup() %>%
      add_count(rok, name = \"m\") %>%
      left_join( totals_boot %>% count(rok, wt = hat_wolne, name = \"total\")) %>%
      mutate(weight = total / m ) %>%
      as.data.frame()
    X <- Matrix::fac2sparse(final_data_kod2$kod2) %>% t() 
    wynik_est <- list()
    wynik_wt <- list()
    wynik_model <- list()
    for (k in 1:length(komps)) {
      
        m1 <- mycv.glmnet(x = X, y = as.matrix(final_data_kod2[,komps[k]]), intercept = T, alpha = 0)
        m1 <- mycv.glmnet(x = X, y = as.matrix(final_data_kod2[,komps[k]]), intercept = T, penalty.factor = 1/abs(m1$coef[-1]))
        X_tot <- Matrix::fac2sparse(totals_boot$kod2) %>% t() 
        lin_pred  <- as.numeric(cbind(1, X_tot) %*% m1$coef)
        t1 <- totals_boot
        t2 <- totals_boot
        t1$pred <- exp(lin_pred) / (1 + exp(lin_pred))
        t2$pred <- 0
        t1$flag <- \"1\"
        t2$flag <- \"0\"
  
        totals_cal <- as.data.frame(rbind(t1,t2))
        totals_cal$wt  <- ifelse(totals_cal$flag  == 1, totals_cal$pred*totals_cal$hat_wolne, totals_cal$hat_wolne)
        tab_totals <- xtabs(wt~ rok + flag, data = totals_cal)
        tab_totals[,1] <- tab_totals[,1] - tab_totals[,2]
        final_data_kod2$flag <- as.character(final_data_kod2[,komps[k]])
        lasso_kod2 <- svydesign(ids = ~1, weight = ~ weight, data = final_data_kod2)
        cal_lasso_kod2 <- calibrate(design = lasso_kod2, 
                                    formula = list(~rok + flag), 
                                    population = list(tab_totals))
  
      svyby(formula = as.formula(paste(\"~\", komps[k])), 
            by = ~ rok, 
            FUN = svymean, 
            design = cal_lasso_kod2) %>%
        select(-se) -> wyn
      wynik_est[[k]] <- wyn
      wynik_wt[[k]] <- weights(cal_lasso_kod2)
      wynik_model[[k]] <- m1
}
wynik <- list(wynik_est = bind_cols(wynik_est), 
              wynik_wt = bind_cols(wynik_wt),
              wynik_model = wynik_model)
}
```"
"1","numValues: 500, numResults: 0, stopped: TRUE
"
"1","Error: Failed to retrieve the value of MultisessionFuture (<none>) from cluster SOCKnode #8 (PID 17737 on localhost ‘localhost’). The reason reported was ‘vector memory exhausted (limit reached?)’. Post-mortem diagnostic: A process with this PID exists, which suggests that the localhost worker is still alive.
"
